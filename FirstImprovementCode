public class QuickUnionImprovement{

    private int[] id;
    private int[] sz;
    
    public QuickUnionImprovement(int N){
	
    	  id = new int[N];
	      sz = new int[N];
	
	      for(int i = 0; i < N; i++){
	    
	         id[i] = i;
	         sz[i] = 1;
	      }
    }
    
    public int root(int i){
	
	      while(id[i] != i){
	          i = id[i];
	      }
	
	      return i;
    }
    
    public boolean connected(int p, int q){
	      return root(p) == root(q);
    }
    
    public void union(int p, int q){
	    
	     int i = root(p);
	     int j = root(q);
	
	     if(sz[i] < sz[j]){
	        id[i] = j;
	        sz[j] += sz[i];
	     }else{
	        id[j] = i;
	        sz[i] += sz[j];
	     }
	
    }
    
    public void printOut() {
	
	     for(int i = 0; i < id.length;i++){
	        System.out.println("id: "+i+" parent: "+ id[i]);
	    
	     }
    }

}
